{"version":3,"sources":["common/DummyPage.jsx","api/userAPI.js","utils/constants.js","api/authAPI.js","utils/auth.js","features/signin/signinSlice.js","common/LandingPage.jsx","common/NotFoundPage.jsx","common/Error.jsx","common/Loading.jsx","features/signin/AuthGuardedRoute.jsx","features/signin/LoginPage.jsx","app/App.js","app/rootReducer.js","app/store.js","serviceWorker.js","index.js"],"names":["Posts","useState","APIData","setAPIData","filteredResults","setFilteredResults","searchInput","setSearchInput","pageNumber","setPageNumber","useEffect","axios","get","then","response","data","pagesVisited","uiData","length","slice","pagination","Math","floor","console","log","style","padding","Input","icon","placeholder","onChange","e","searchValue","filteredData","filter","item","Object","values","join","toLowerCase","includes","searchItems","target","value","Card","Group","className","itemsPerRow","marginTop","map","sx","minWidth","CardContent","Typography","fontSize","color","gutterBottom","title","variant","component","completed","Array","from","_","index","onClick","getCurrentUser","apiContext","username","token","split","getUser","Promise","resolve","reject","setTimeout","firstName","lastName","Error","NETWORK_LATENCY","signin","password","a","nanoid","user","signout","TOKEN_KEY","auth","isAuthenticated","getToken","login","logout","sessionStorage","getItem","localStorage","rememberMe","setItem","removeItem","checkAuth","createAsyncThunk","initialState","loading","error","loggedIn","loggedInUser","signinSlice","createSlice","name","reducers","extraReducers","pending","startLoading","fulfilled","state","payload","assign","rejected","receiveError","action","selectSignin","signinReducer","reducer","LandingPage","useSelector","NotFoundPage","React","memo","message","Loading","AuthGuardedRoute","children","rest","dispatch","useDispatch","history","useHistory","render","location","isLoginPagePathname","pathname","to","push","renderRoutedComponent","LoginPage","formState","setFormState","useLocation","htmlFor","display","id","type","required","size","handleFormStateChange","checked","event","preventDefault","replace","App","exact","path","rootReducer","combineReducers","store","configureStore","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mVAWO,SAASA,IACd,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8CF,mBAAS,IAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAoCN,mBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,IAAMC,IAAN,8CAAwDC,MAAK,SAACC,GAC5DX,EAAWW,EAASC,WAErB,IAEH,IACMC,EADc,GACCR,EAEfS,EAAS,WACb,OAAIX,EAAYY,OAAS,EAChB,CACLH,KAAMX,EAAgBe,MAAMH,EAAcA,EAN5B,IAOdI,WAAYC,KAAKC,MAAMlB,EAAgBc,OAAS,IAG7C,CACLH,KAAMb,EAAQiB,MAAMH,EAAcA,EAXlB,IAYhBI,WAAYC,KAAKC,MAAMpB,EAAQgB,OAAS,KAqB5C,OADAK,QAAQC,IAAIP,KAEV,sBAAKQ,MAAO,CAAEC,QAAS,IAAvB,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,SACLC,YAAY,kBACZC,SAAU,SAACC,GAAD,OAtBI,SAACC,GAGnB,GAFAzB,EAAeyB,GAEK,KAAhB1B,EAAoB,CACtB,IAAM2B,EAAe/B,EAAQgC,QAAO,SAACC,GACnC,OAAOC,OAAOC,OAAOF,GAClBG,KAAK,IACLC,cACAC,SAASlC,EAAYiC,kBAE1BlC,EAAmB4B,QAEnB5B,EAAmBH,GAUAuC,CAAYV,EAAEW,OAAOC,UAExC,cAACC,EAAA,EAAKC,MAAN,CACEC,UAAU,mBACVC,YAAa,EACbtB,MAAO,CAAEuB,UAAW,IAHtB,SAKG/B,IAASF,KAAKkC,KAAI,SAACd,GAClB,OACE,cAACS,EAAA,EAAD,CAAME,UAAU,OAAOI,GAAI,CAAEC,SAAU,KAAvC,SACE,eAACC,EAAA,EAAD,CAAaN,UAAU,SAAvB,UACE,cAACO,EAAA,EAAD,CACEH,GAAI,CAAEI,SAAU,IAChBC,MAAM,iBACNC,cAAY,EAHd,SAKGrB,EAAKsB,QAER,cAACJ,EAAA,EAAD,CAAYK,QAAQ,KAAKC,UAAU,MAAnC,SACGxB,EAAKyB,sBAOlB,qBAAKd,UAAU,YAAf,SACGe,MAAMC,KAAK,IAAID,MAAM5C,IAASG,aAAa6B,KAAI,SAACc,EAAGC,GAAJ,OAC9C,qBACElB,UAAU,aACVmB,QAAS,WACPxD,EAAcuD,IAHlB,SAMGA,EAAQ,Y,6DC7Fd,SAASE,IAAiC,IAAlBC,EAAiB,uDAAJ,GACpCC,GAAYD,EAAWE,OAAS,IAAIC,MAAM,KAAK,GAErD,OAAOC,EAAQH,EAAUD,GAGpB,SAASI,EAAQH,GAA4B,IAAlBD,EAAiB,uDAAJ,GACrCE,EAAUF,EAAVE,MAER,OAAO,IAAIG,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,GAAIN,EAAO,CACT,GAAiB,cAAbD,EAA0B,CAO5B,OAAOK,EANM,CACXL,SAAU,YACVQ,UAAW,YACXC,SAAU,WAMd,OAAOH,EAAO,IAAII,MAAJ,oBAAuBV,EAAvB,uBAGhB,OAAOM,EACL,IAAII,MAAM,sDAEX,MC9BA,IAAMC,EAAkB,KCIxB,SAASC,EAAT,GAA0D,IAAxCZ,EAAuC,EAAvCA,SAAUa,EAA6B,EAA7BA,SACjC,OAAO,IAAIT,SAAQ,SAACC,EAASC,GAC3BC,WAAU,sBAAC,8BAAAO,EAAA,yDACQ,cAAbd,GAAyC,WAAba,EADvB,iCAGCZ,EAHD,UAGYD,EAHZ,YAGwBe,eAHxB,SAIcZ,EAAQH,EAAU,CAAEC,UAJlC,cAICe,EAJD,yBAMEX,EAAQ,CAAEJ,QAAOe,UANnB,yDAQEV,EAAO,EAAD,KARR,iCAYFA,EACL,IAAII,MACF,wHAdK,yDAiBRC,MAIA,SAASM,IACd,OAAO,IAAIb,SAAQ,SAACC,GAClBE,WAAWF,EAASM,MC3BxB,I,EAAMO,EAAY,WAELC,EAAO,CAClBC,gBAMF,WACE,QAASC,KANTA,WACAC,M,4CACAC,O,4CAOF,SAASF,IACP,OAAOG,eAAeC,QAAQP,IAAcQ,aAAaD,QAAQP,G,4CAGnE,uCAAAJ,EAAA,6DAAuBd,EAAvB,EAAuBA,SAAUa,EAAjC,EAAiCA,SAAUc,EAA3C,EAA2CA,WAA3C,SACgCf,EAAO,CAAEZ,WAAUa,aADnD,uBACUZ,EADV,EACUA,MAAOe,EADjB,EACiBA,KAEXW,EACFD,aAAaE,QAAQV,EAAWjB,GAEhCuB,eAAeI,QAAQV,EAAWjB,GANtC,kBASS,CAAEA,QAAOe,SATlB,4C,kEAYA,sBAAAF,EAAA,sEACQG,IADR,OAEEO,eAAeK,WAAWX,GAC1BQ,aAAaG,WAAWX,GAH1B,4C,sBC3BO,IAAMY,EAAYC,YAAiB,mBAAD,sBAAqB,8BAAAjB,EAAA,0DACxDK,EAAKC,kBADmD,uBAEpDnB,EAAQkB,EAAKE,WAFuC,SAGvCvB,EAAe,CAAEG,UAHsB,cAGpDe,EAHoD,yBAKnD,CAAEf,QAAOe,SAL0C,gCAQrD,CAAEf,MAAO,KAAMe,KAAM,OARgC,4CAWjDM,EAAQS,YAAiB,eAAgBZ,EAAKG,OAE9CC,EAASQ,YAAiB,gBAAiBZ,EAAKI,QAEvDS,EAAe,CACnBC,SAAS,EACTC,MAAO,KACPC,UAAU,EACVC,aAAc,KACdnC,MAAO,MAGIoC,EAAcC,YAAY,CACrCC,KAAM,SACNP,eACAQ,SAAU,GACVC,eAAa,mBACVX,EAAUY,QAAUC,GADV,cAEVb,EAAUc,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QAC/B,EAAsCA,EAA9B7C,aAAR,MAAgB,KAAhB,IAAsC6C,EAAhB9B,YAAtB,MAA6B,KAA7B,EAEAhD,OAAO+E,OAAOF,EAAO,CACnBZ,SAAS,EACTC,MAAO,KACPC,WAAYlC,EACZmC,aAAcpB,EACdf,aAVO,cAaV6B,EAAUkB,SAAWC,GAbX,cAeV3B,EAAMoB,QAAUC,GAfN,cAgBVrB,EAAMsB,WAAY,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACnB7C,EAAgB6C,EAAhB7C,MAAOe,EAAS8B,EAAT9B,KAEfhD,OAAO+E,OAAOF,EAAO,CACnBZ,SAAS,EACTE,UAAU,EACVC,aAAcpB,EACdf,aAvBO,cA0BVqB,EAAM0B,SAAWC,GA1BP,cA4BV1B,EAAOmB,QAAUC,GA5BP,cA6BVpB,EAAOqB,WAAY,SAACC,GAAD,OAClB7E,OAAO+E,OAAOF,EAAd7E,OAAA,IAAAA,QAAA,IAAAA,CAAA,GACKgE,GADL,IAEEC,SAAS,QAhCF,cAkCVV,EAAOyB,SAAWC,GAlCR,KAsCf,SAASN,EAAaE,GACpB7E,OAAO+E,OAAOF,EAAO,CACnBZ,SAAS,EACTC,MAAO,OAIX,SAASe,EAAaJ,EAAOK,GAC3BlF,OAAO+E,OAAOF,EAAO,CACnBZ,SAAS,EACTC,MAAOgB,EAAOhB,QAIX,IAAMiB,EAAe,SAACN,GAAD,OAAWA,EAAMjC,QAEhCwC,EAAgBf,EAAYgB,QChFlC,SAASC,IACd,IAAQlB,EAAiBmB,YAAYJ,GAA7Bf,aAER,OACE,sBAAK1D,UAAU,eAAf,UACE,2CACA,yCAAY0D,EAAa5B,UAAzB,UCTC,SAASgD,IACd,OACE,qBAAK9E,UAAU,iBAAf,SACE,mD,YCHOgC,EAAQ+C,IAAMC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjC,OACE,mBAAGjF,UAAU,cAAcrB,MAAO,CAAE8B,MAAO,OAA3C,SACGwE,OCLA,SAASC,IACd,OAAO,2C,0BCOF,SAASC,EAAT,GAAkD,IAAtBC,EAAqB,EAArBA,SAAaC,EAAQ,iBACtD,EAAqCR,YAAYJ,GAAzClB,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,SAAUD,EAA3B,EAA2BA,MACrB8B,EAAWC,cACXC,EAAUC,cAMhB,OAJA7H,qBAAU,WACR0H,EAASlC,OACR,CAACkC,IAEG/B,EACL,cAAC2B,EAAD,IAEA,qCACG1B,GAAS,cAAC,EAAD,CAAOyB,QAASzB,EAAMyB,UAChC,cAAC,IAAD,2BACMI,GADN,IAEEK,OAAQ,mBAKd,SAA+BC,GAC7B,IAAMC,EAAsBD,EAASE,SAASnG,SAAS,SAEvD,GAAI+D,EAAU,CACZ,GAAImC,EAAqB,CACvB,IAAQ5E,GAAS2E,EAASxB,OAAS,CAAEnD,KAAM,CAAE6E,SAAU,OAA/C7E,KAER,OACE,cAAC,IAAD,CACE8E,GAAI,CACFD,SAAU7E,EAAK6E,SACf1B,MAAO,CAAEnD,WAMjB,OACE,qCACGoE,EACD,wBACEpF,UAAU,SACVmB,QAAO,sBAAE,sBAAAiB,EAAA,sEACDkD,EAASzC,KADR,OAEP2C,EAAQO,KAAK,KAFN,2CAFX,wBAYJ,OAAIH,EACKR,EAIP,cAAC,IAAD,CACEU,GAAI,CACFD,SAAU,SACV1B,MAAO,CAAEnD,KAAM2E,MA7COK,CAAlB,EAAGL,iBClBZ,SAASM,IACd,MAAkC9I,mBAAS,CACzCmE,SAAU,GACVa,SAAU,GACVc,YAAY,IAHd,mBAAOiD,EAAP,KAAkBC,EAAlB,KAKMb,EAAWC,cACXC,EAAUC,cAERzE,GADSoF,cACSjC,OAAS,CAAEnD,KAAM,CAAE6E,SAAU,OAA/C7E,KAER,OACE,sBAAKhB,UAAU,cAAf,UACE,oBAAGA,UAAU,SAAb,iDACuCgB,EAAK6E,YAE5C,uBAAM7F,UAAU,aAAhB,UACE,sBAAKA,UAAU,aAAf,UACE,uBACEA,UAAU,OACVqG,QAAQ,WACR1H,MAAO,CAAE2H,QAAS,SAHpB,uBAOA,uBACEC,GAAG,WACHvG,UAAU,QACV6D,KAAK,WACL2C,KAAK,OACLC,UAAQ,EACRC,KAAK,KACL7G,MAAOqG,EAAU5E,SACjBtC,SAAU2H,OAGd,sBAAK3G,UAAU,aAAf,UACE,uBAAOqG,QAAQ,WAAW1H,MAAO,CAAE2H,QAAS,SAA5C,uBAGA,uBACEtG,UAAU,QACVuG,GAAG,WACH1C,KAAK,WACL2C,KAAK,WACLC,UAAQ,EACRC,KAAK,KACL7G,MAAOqG,EAAU/D,SACjBnD,SAAU2H,OAGd,sBAAK3G,UAAU,aAAf,UACE,uBAAOqG,QAAQ,aAAf,yBACA,uBACEE,GAAG,aACH1C,KAAK,aACL2C,KAAK,WACLI,QAASV,EAAUjD,WACnBjE,SAAU2H,OAGd,wBAAQ3G,UAAU,SAASmB,QA7DP,4CA6DpB,yBAON,SAASwF,EAAsBE,GAC7B,MAAuCA,EAAMjH,OAArCiE,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,KAAM3G,EAApB,EAAoBA,MAAO+G,EAA3B,EAA2BA,QAE3BT,EAAa,2BACRD,GADO,kBAETrC,EAAgB,aAAT2C,EAAsBI,EAAU/G,KAzElB,4CA6E1B,WAA6BgH,GAA7B,SAAAzE,EAAA,6DACEyE,EAAMC,iBADR,SAEQxB,EAAS1C,EAAMsD,IAFvB,OAIEV,EAAQuB,QAAQ/F,GAJlB,4CA7E0B,uB,OCmCbgG,MAhCf,WACE,OACE,sBAAKhH,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAIA,UAAU,OAAd,UACE,6BACE,cAAC,IAAD,CAAM8F,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,0BAKN,eAAC,IAAD,WACE,cAACX,EAAD,CAAkB8B,OAAK,EAACC,KAAM,CAAC,IAAK,eAApC,SACE,cAACtC,EAAD,MAEF,cAACO,EAAD,CAAkB+B,KAAM,CAAC,SAAU,SAAnC,SACE,cAAChK,EAAD,MAEF,cAACiI,EAAD,CAAkB+B,KAAK,SAAvB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAACpC,EAAD,a,SC1BKqC,GAJKC,aAAgB,CAClClF,OAAQwC,ICSK2C,OAXDC,YAAe,CAC3B3C,QAASwC,KCQSI,QACW,cAA7BC,OAAO7B,SAAS8B,UAEe,UAA7BD,OAAO7B,SAAS8B,UAEhBD,OAAO7B,SAAS8B,SAASC,MACvB,2DCPNC,IAASjC,OACP,cAAC,IAAMkC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOH,KAAK,IAAIrG,UAAWmG,UAIjCa,SAASC,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlK,MAAK,SAACmK,GAClCA,EAAaC,kB","file":"static/js/main.b3e5c8e3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Card, Input } from \"semantic-ui-react\";\r\nimport \"./DummyPage.css\";\r\n// import './App.css';\r\nimport { mergeClasses } from \"@material-ui/styles\";\r\n// import ReactPaginate from \"react-paginate\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport function Posts() {\r\n  const [APIData, setAPIData] = useState([]);\r\n  const [filteredResults, setFilteredResults] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  const [pageNumber, setPageNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/todos`).then((response) => {\r\n      setAPIData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const userPerPage = 10;\r\n  const pagesVisited = pageNumber * userPerPage;\r\n\r\n  const uiData = () => {\r\n    if (searchInput.length > 0) {\r\n      return {\r\n        data: filteredResults.slice(pagesVisited, pagesVisited + userPerPage),\r\n        pagination: Math.floor(filteredResults.length / 5),\r\n      };\r\n    }\r\n    return {\r\n      data: APIData.slice(pagesVisited, pagesVisited + userPerPage),\r\n      pagination: Math.floor(APIData.length / 5),\r\n    };\r\n  };\r\n\r\n  const searchItems = (searchValue) => {\r\n    setSearchInput(searchValue);\r\n\r\n    if (searchInput !== \"\") {\r\n      const filteredData = APIData.filter((item) => {\r\n        return Object.values(item)\r\n          .join(\"\")\r\n          .toLowerCase()\r\n          .includes(searchInput.toLowerCase());\r\n      });\r\n      setFilteredResults(filteredData);\r\n    } else {\r\n      setFilteredResults(APIData);\r\n    }\r\n  };\r\n\r\n  console.log(uiData());\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <Input\r\n        icon=\"search\"\r\n        placeholder=\"Search By title\"\r\n        onChange={(e) => searchItems(e.target.value)}\r\n      />\r\n      <Card.Group\r\n        className=\"flex column wrap\"\r\n        itemsPerRow={2}\r\n        style={{ marginTop: 20 }}\r\n      >\r\n        {uiData().data.map((item) => {\r\n          return (\r\n            <Card className=\"card\" sx={{ minWidth: 275 }}>\r\n              <CardContent className=\"center\">\r\n                <Typography\r\n                  sx={{ fontSize: 14 }}\r\n                  color=\"text.secondary\"\r\n                  gutterBottom\r\n                >\r\n                  {item.title}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"div\">\r\n                  {item.completed}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </Card.Group>\r\n      <div className=\"flex page\">\r\n        {Array.from(new Array(uiData().pagination)).map((_, index) => (\r\n          <div\r\n            className=\"pagination\"\r\n            onClick={() => {\r\n              setPageNumber(index);\r\n            }}\r\n          >\r\n            {index + 1}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// const CURRENT_USER = Symbol('CURRENT_USER');\r\n\r\nexport function getCurrentUser(apiContext = {}) {\r\n  const username = (apiContext.token || \"\").split(\":\")[0];\r\n\r\n  return getUser(username, apiContext);\r\n}\r\n\r\nexport function getUser(username, apiContext = {}) {\r\n  const { token } = apiContext;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      if (token) {\r\n        if (username === \"siddharth\") {\r\n          const user = {\r\n            username: \"siddharth\",\r\n            firstName: \"siddharth\",\r\n            lastName: \"sharma\",\r\n          };\r\n\r\n          return resolve(user);\r\n        }\r\n\r\n        return reject(new Error(`Username \"${username}\" does not exist.`));\r\n      }\r\n\r\n      return reject(\r\n        new Error(\"Unauthorized User API call: missing auth token.\")\r\n      );\r\n    }, 0);\r\n  });\r\n}\r\n","export const NETWORK_LATENCY = 1453;\r\n","import { nanoid } from \"@reduxjs/toolkit\";\r\nimport { NETWORK_LATENCY } from \"../utils/constants\";\r\nimport { getUser } from \"./userAPI\";\r\n\r\nexport function signin({ username, password }, apiContext = {}) {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(async () => {\r\n      if (username === \"siddharth\" && password === \"sid123\") {\r\n        try {\r\n          const token = `${username}:${nanoid()}`;\r\n          const user = await getUser(username, { token });\r\n\r\n          return resolve({ token, user });\r\n        } catch (e) {\r\n          return reject(e);\r\n        }\r\n      }\r\n\r\n      return reject(\r\n        new Error(\r\n          \"Invalid username and password. Please login with (username: siddharth, password: sid123). 😌🐡\"\r\n        )\r\n      );\r\n    }, NETWORK_LATENCY);\r\n  });\r\n}\r\n\r\nexport function signout(apiContext = {}) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, NETWORK_LATENCY);\r\n  });\r\n}\r\n","import { signin, signout } from \"../api/authAPI\";\r\n\r\nconst TOKEN_KEY = \"_t4gd-*-\";\r\n\r\nexport const auth = {\r\n  isAuthenticated,\r\n  getToken,\r\n  login,\r\n  logout,\r\n};\r\n\r\nfunction isAuthenticated() {\r\n  return !!getToken();\r\n}\r\n\r\nfunction getToken() {\r\n  return sessionStorage.getItem(TOKEN_KEY) || localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nasync function login({ username, password, rememberMe }) {\r\n  const { token, user } = await signin({ username, password });\r\n\r\n  if (rememberMe) {\r\n    localStorage.setItem(TOKEN_KEY, token);\r\n  } else {\r\n    sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  return { token, user };\r\n}\r\n\r\nasync function logout() {\r\n  await signout();\r\n  sessionStorage.removeItem(TOKEN_KEY);\r\n  localStorage.removeItem(TOKEN_KEY);\r\n}\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getCurrentUser } from \"../../api/userAPI\";\r\nimport { auth } from \"../../utils/auth\";\r\n\r\nexport const checkAuth = createAsyncThunk(\"signin/checkAuth\", async () => {\r\n  if (auth.isAuthenticated()) {\r\n    const token = auth.getToken();\r\n    const user = await getCurrentUser({ token });\r\n\r\n    return { token, user };\r\n  }\r\n\r\n  return { token: null, user: null };\r\n});\r\n\r\nexport const login = createAsyncThunk(\"signin/login\", auth.login);\r\n\r\nexport const logout = createAsyncThunk(\"signin/logout\", auth.logout);\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  error: null,\r\n  loggedIn: false,\r\n  loggedInUser: null,\r\n  token: null,\r\n};\r\n\r\nexport const signinSlice = createSlice({\r\n  name: \"signin\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [checkAuth.pending]: startLoading,\r\n    [checkAuth.fulfilled]: (state, { payload }) => {\r\n      const { token = null, user = null } = payload;\r\n\r\n      Object.assign(state, {\r\n        loading: false,\r\n        error: null,\r\n        loggedIn: !!token,\r\n        loggedInUser: user,\r\n        token,\r\n      });\r\n    },\r\n    [checkAuth.rejected]: receiveError,\r\n\r\n    [login.pending]: startLoading,\r\n    [login.fulfilled]: (state, { payload }) => {\r\n      const { token, user } = payload;\r\n\r\n      Object.assign(state, {\r\n        loading: false,\r\n        loggedIn: true,\r\n        loggedInUser: user,\r\n        token,\r\n      });\r\n    },\r\n    [login.rejected]: receiveError,\r\n\r\n    [logout.pending]: startLoading,\r\n    [logout.fulfilled]: (state) =>\r\n      Object.assign(state, {\r\n        ...initialState,\r\n        loading: false,\r\n      }),\r\n    [logout.rejected]: receiveError,\r\n  },\r\n});\r\n\r\nfunction startLoading(state) {\r\n  Object.assign(state, {\r\n    loading: true,\r\n    error: null,\r\n  });\r\n}\r\n\r\nfunction receiveError(state, action) {\r\n  Object.assign(state, {\r\n    loading: false,\r\n    error: action.error,\r\n  });\r\n}\r\n\r\nexport const selectSignin = (state) => state.signin;\r\n\r\nexport const signinReducer = signinSlice.reducer;\r\n","import { useSelector } from \"react-redux\";\r\nimport { selectSignin } from \"../features/signin/signinSlice\";\r\n\r\n// import bender from \"./bender.png\";\r\n\r\nexport function LandingPage() {\r\n  const { loggedInUser } = useSelector(selectSignin);\r\n\r\n  return (\r\n    <div className=\"page-landing\">\r\n      <h1>Home page</h1>\r\n      <p>Welcome {loggedInUser.firstName}.</p>\r\n    </div>\r\n  );\r\n}\r\n","// import { Link } from 'react-router-dom';\r\n\r\nexport function NotFoundPage() {\r\n  return (\r\n    <div className=\"page-not-found\">\r\n      <h2>Page not found.</h2>\r\n      {/*<ul>*/}\r\n      {/*  <li>*/}\r\n      {/*    <Link to=\"/\">Home</Link>*/}\r\n      {/*  </li>*/}\r\n      {/*</ul>*/}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Error = React.memo(({ message }) => {\r\n  return (\r\n    <p className=\"error-block\" style={{ color: \"red\" }}>\r\n      {message}\r\n    </p>\r\n  );\r\n});\r\n","export function Loading() {\r\n  return <p>Loading...</p>;\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect, Route, useHistory } from \"react-router-dom\";\r\nimport { Error } from \"../../common/Error\";\r\nimport { Loading } from \"../../common/Loading\";\r\nimport { checkAuth, logout, selectSignin } from \"./signinSlice\";\r\nimport \"./LoginPage.css\";\r\n\r\nexport function AuthGuardedRoute({ children, ...rest }) {\r\n  const { loading, loggedIn, error } = useSelector(selectSignin);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkAuth());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loading />\r\n  ) : (\r\n    <>\r\n      {error && <Error message={error.message} />}\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) => renderRoutedComponent(location)}\r\n      />\r\n    </>\r\n  );\r\n\r\n  function renderRoutedComponent(location) {\r\n    const isLoginPagePathname = location.pathname.includes(\"login\");\r\n\r\n    if (loggedIn) {\r\n      if (isLoginPagePathname) {\r\n        const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n        return (\r\n          <Redirect\r\n            to={{\r\n              pathname: from.pathname,\r\n              state: { from },\r\n            }}\r\n          />\r\n        );\r\n      }\r\n\r\n      return (\r\n        <>\r\n          {children}\r\n          <button\r\n            className=\"logout\"\r\n            onClick={async () => {\r\n              await dispatch(logout());\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Log Out\r\n          </button>\r\n        </>\r\n      );\r\n    } else {\r\n      if (isLoginPagePathname) {\r\n        return children;\r\n      }\r\n\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/login\",\r\n            state: { from: location },\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { login } from \"./signinSlice\";\r\nimport \"./LoginPage.css\";\r\n\r\nexport function LoginPage() {\r\n  const [formState, setFormState] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    rememberMe: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  return (\r\n    <div className=\"page-login \">\r\n      <p className=\"center\">\r\n        You must log in to view the page at {from.pathname}\r\n      </p>\r\n      <form className=\"login-form\">\r\n        <div className=\"form-group\">\r\n          <label\r\n            className=\"left\"\r\n            htmlFor=\"username\"\r\n            style={{ display: \"block\" }}\r\n          >\r\n            Username:\r\n          </label>\r\n          <input\r\n            id=\"username\"\r\n            className=\"input\"\r\n            name=\"username\"\r\n            type=\"text\"\r\n            required\r\n            size=\"32\"\r\n            value={formState.username}\r\n            onChange={handleFormStateChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" style={{ display: \"block\" }}>\r\n            Password:\r\n          </label>\r\n          <input\r\n            className=\"input\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            required\r\n            size=\"32\"\r\n            value={formState.password}\r\n            onChange={handleFormStateChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"rememberMe\">Remember me</label>\r\n          <input\r\n            id=\"rememberMe\"\r\n            name=\"rememberMe\"\r\n            type=\"checkbox\"\r\n            checked={formState.rememberMe}\r\n            onChange={handleFormStateChange}\r\n          />\r\n        </div>\r\n        <button className=\"submit\" onClick={handleOnClick}>\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  function handleFormStateChange(event) {\r\n    const { name, type, value, checked } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  }\r\n\r\n  async function handleOnClick(event) {\r\n    event.preventDefault();\r\n    await dispatch(login(formState));\r\n\r\n    history.replace(from);\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch, Link } from \"react-router-dom\";\r\nimport { Posts } from \"../common/DummyPage\";\r\nimport { LandingPage } from \"../common/LandingPage\";\r\nimport { NotFoundPage } from \"../common/NotFoundPage\";\r\nimport { AuthGuardedRoute } from \"../features/signin/AuthGuardedRoute\";\r\nimport { LoginPage } from \"../features/signin/LoginPage\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav className=\"menu navbar\">\r\n        <ul className=\"menu\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/dummy\">Posts</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      <Switch>\r\n        <AuthGuardedRoute exact path={[\"/\", \"/index.html\"]}>\r\n          <LandingPage />\r\n        </AuthGuardedRoute>\r\n        <AuthGuardedRoute path={[\"/dummy\", \"/wtfk\"]}>\r\n          <Posts />\r\n        </AuthGuardedRoute>\r\n        <AuthGuardedRoute path=\"/login\">\r\n          <LoginPage />\r\n        </AuthGuardedRoute>\r\n        <Route path=\"*\">\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport { signinReducer } from \"../features/signin/signinSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  signin: signinReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\" && module.hot) {\r\n  module.hot.accept(\"./rootReducer\", () => {\r\n    const newRootReducer = require(\"./rootReducer\").default;\r\n    store.replaceReducer(newRootReducer);\r\n  });\r\n}\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./app/App\";\nimport store from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// console.log('full-page reload');\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Route path=\"/\" component={App} />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}